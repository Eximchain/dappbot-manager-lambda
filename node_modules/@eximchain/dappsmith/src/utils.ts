const shell = require('shelljs');
const fs = require('fs-extra');
const path = require('path');
import { MethodAbi } from 'ethereum-types';
import Handlebars, { camelCase, pascalCase } from './handlebars'

export const titleCase = (str:string) => {
    const cameled = camelCase(str);
    return cameled[0].toUpperCase() + cameled.slice(1);
}

export const loadTemplate = (templatePath:string) => {
    return String(fs.readFileSync(path.resolve(__dirname, templatePath)))
}

export const writeTemplateToPath = (templatePath:string, filePath:string, templateArg:any={}) => {
    const templateCode = Handlebars.compile(loadTemplate(templatePath))(templateArg)
    fs.writeFileSync(filePath, templateCode);
}

export const componentTemplateArgs = (method:MethodAbi) => {
    return {
        method : method,
        camelName : camelCase(method.name),
        pascalName : pascalCase(method.name)
    }
}

export const nestedCreateDir = (dirName:string, nestedActions=()=>{}) => {
    fs.ensureDirSync(dirName);
    shell.cd(dirName);
    nestedActions();
    shell.cd('..');
}