import React, { FunctionComponent } from 'react';
import { MethodAbi } from 'ethereum-types';
// @ts-ignore File only present after generation
import ReadComponentMap from '../txMethods/reads/nameToComponent';
// @ts-ignore File only present after generation
import WriteComponentMap from '../txMethods/writes/nameToComponent';
const keyBy = require('lodash.keyby');

interface Props {
    fxns: MethodAbi[]
    focused: string
}

export const TxMainPane: FunctionComponent<Props> = ({fxns, focused}) => {
    let keyedFxns = keyBy(fxns, (fxn:MethodAbi)=>fxn.name)
    let fxn = keyedFxns[focused];
    if (fxn) {
        let MethodComponent:FunctionComponent;
        if (fxn.constant) {
            MethodComponent = ReadComponentMap[fxn.name];
        } else {
            MethodComponent = WriteComponentMap[fxn.name];
        }
        return <MethodComponent />
    } else {
        return (
            <h2>Select a method to view its parameters.</h2>
        )
    }
}

export default TxMainPane;