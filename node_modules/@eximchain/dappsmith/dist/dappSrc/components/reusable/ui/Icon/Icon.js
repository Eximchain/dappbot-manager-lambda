"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var StyledIcon_1 = require("./StyledIcon");
var renderSingleToneIcon = function (props) {
    var className = props.className, color = props.color, icon = props.icon, type = props.type, onClick = props.onClick;
    var iconClass;
    if (type === "thin") {
        iconClass = "i-thin-" + icon;
    }
    else {
        iconClass = "i-" + icon;
    }
    var classes = classnames_1.default("icon", iconClass, color, className);
    return React.createElement(StyledIcon_1.StyledIcon, { className: classes, onClick: onClick });
};
var renderDuoToneIcon = function (props) {
    var className = props.className, icon = props.icon, onClick = props.onClick;
    var content, classes;
    switch (icon) {
        case "wallet":
            classes = classnames_1.default("icon", "i-duo-wallet", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" })));
            break;
        case "activity":
            classes = classnames_1.default("icon", "i-duo-activity", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" })));
            break;
        case "governance":
            classes = classnames_1.default("icon", "i-duo-governance", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" })));
            break;
        case "members":
            classes = classnames_1.default("icon", "i-duo-members", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" }),
                React.createElement("span", { className: "path3" }),
                React.createElement("span", { className: "path4" }),
                React.createElement("span", { className: "path5" })));
            break;
        case "identity":
            classes = classnames_1.default("icon", "i-duo-identity", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" })));
            break;
        case "not-tilted":
            classes = classnames_1.default("icon", "i-duo-not-tilted", className);
            content = (React.createElement("span", { className: classes, onClick: onClick },
                React.createElement("span", { className: "path1" }),
                React.createElement("span", { className: "path2" })));
            break;
        default:
            content = null;
            break;
    }
    return content;
};
exports.Icon = function (props) {
    if (props.type == "duotone") {
        return renderDuoToneIcon(props);
    }
    else {
        return renderSingleToneIcon(props);
    }
};
exports.Icon.defaultProps = {
    type: "thick"
};
exports.Icon.displayName = "Icon";
exports.default = exports.Icon;
//# sourceMappingURL=Icon.js.map