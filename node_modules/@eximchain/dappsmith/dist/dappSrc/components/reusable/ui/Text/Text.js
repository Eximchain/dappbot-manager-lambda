"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var classnames_1 = __importDefault(require("classnames"));
var StyledText_1 = __importDefault(require("./StyledText"));
var SIZE_SCALE = {
    xs: 1,
    sm: 2,
    md: 3,
    lg: 4,
    xl: 5
};
exports.Text = function (props) {
    var _a;
    var _b = props.align, align = _b === void 0 ? "left" : _b, _c = props.bold, bold = _c === void 0 ? false : _c, children = props.children, _d = props.color, color = _d === void 0 ? "darkGray" : _d, _e = props.inline, inline = _e === void 0 ? false : _e, _f = props.italic, italic = _f === void 0 ? false : _f, _g = props.overflow, overflow = _g === void 0 ? "breakWord" : _g, _h = props.size, size = _h === void 0 ? "md" : _h, _j = props.smSize, smSize = _j === void 0 ? "md" : _j, _k = props.mdSize, mdSize = _k === void 0 ? "md" : _k, _l = props.lgSize, lgSize = _l === void 0 ? "md" : _l, _m = props.leading, leading = _m === void 0 ? "md" : _m, _o = props.truncate, truncate = _o === void 0 ? false : _o, textTransform = props.textTransform, _p = props.__dangerouslyIncreaseLineHeight, __dangerouslyIncreaseLineHeight = _p === void 0 ? false : _p;
    var scale = SIZE_SCALE[size];
    var smScale = SIZE_SCALE[smSize];
    var mdScale = SIZE_SCALE[mdSize];
    var lgScale = SIZE_SCALE[lgSize];
    var cs = classnames_1.default("Text", "fontSize" + scale, color !== "inherit" ? color : "", (_a = {},
        _a["lgFontSize" + lgScale] = lgSize,
        _a["mdFontSize" + mdScale] = mdSize,
        _a["smFontSize" + smScale] = smSize,
        _a.inline = inline,
        _a.leadingShort = leading === "short",
        _a.leadingTall = leading === "tall" || __dangerouslyIncreaseLineHeight,
        _a.alignCenter = align === "center",
        _a.alignJustify = align === "justify",
        _a.alignLeft = align === "left",
        _a.alignRight = align === "right",
        _a.breakWord = overflow === "breakWord",
        _a.fontStyleItalic = italic,
        _a.fontStyleNormal = !italic,
        _a.fontWeightBold = bold,
        _a.fontWeightNormal = !bold,
        _a.truncate = truncate,
        _a.uppercase = textTransform === "uppercase",
        _a.lowercase = textTransform === "lowecase",
        _a.capitalize = textTransform === "capitalize",
        _a));
    return (React.createElement(StyledText_1.default, __assign({ className: cs }, (truncate && typeof children === "string"
        ? { title: children }
        : null)), children));
};
exports.Text.defaultProps = {
    align: "left",
    bold: false,
    color: "darkGray",
    inline: false,
    italic: false,
    overflow: "breakWord",
    size: "md",
    truncate: false,
    __dangerouslyIncreaseLineHeight: false
};
exports.Text.displayName = "Text";
exports.default = exports.Text;
//# sourceMappingURL=Text.js.map