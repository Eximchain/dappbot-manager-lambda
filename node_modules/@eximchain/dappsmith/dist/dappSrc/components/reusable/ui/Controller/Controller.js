"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var Contents_1 = __importDefault(require("./../Contents"));
var OutsideEventBehavior_1 = __importDefault(require("./../utils/OutsideEventBehavior"));
var SIZE_WIDTH_MAP = {
    xs: 185,
    sm: 230,
    md: 284,
    lg: 320,
    xl: 375
};
var ESCAPE_KEY_CODE = 27;
var Controller = /** @class */ (function (_super) {
    __extends(Controller, _super);
    function Controller() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.state = {
            relativeOffset: {
                x: 0,
                y: 0
            },
            triggerBoundingRect: {
                bottom: 0,
                height: 0,
                left: 0,
                right: 0,
                top: 0,
                width: 0
            }
        };
        _this.handleKeyDown = function (event) {
            if (event.keyCode === ESCAPE_KEY_CODE) {
                _this.props.onDismiss();
            }
        };
        _this.handlePageClick = function (event) {
            if (event.target instanceof Node &&
                _this.props.anchor &&
                !_this.props.anchor.contains(event.target)) {
                _this.props.onDismiss();
            }
        };
        _this.handleResize = function () {
            _this.updateTriggerRect(_this.props);
        };
        _this.updateTriggerRect = function (props) {
            var anchor = props.anchor, positionRelativeToAnchor = props.positionRelativeToAnchor;
            var triggerBoundingRect;
            var relativeOffset;
            if (anchor) {
                triggerBoundingRect = anchor.getBoundingClientRect();
                // Needed for correct positioning within Contents.js
                relativeOffset = {
                    x: positionRelativeToAnchor
                        ? triggerBoundingRect.left - anchor.offsetLeft
                        : 0,
                    y: positionRelativeToAnchor
                        ? triggerBoundingRect.top - anchor.offsetTop
                        : 0
                };
            }
            _this.setState({
                relativeOffset: relativeOffset,
                triggerBoundingRect: triggerBoundingRect
            });
        };
        return _this;
    }
    Controller.prototype.componentDidMount = function () {
        this.updateTriggerRect(this.props);
    };
    Controller.prototype.componentWillReceiveProps = function (nextProps) {
        this.updateTriggerRect(nextProps);
    };
    Controller.prototype.render = function () {
        var _a = this.props, anchor = _a.anchor, bgColor = _a.bgColor, children = _a.children, idealDirection = _a.idealDirection, positionRelativeToAnchor = _a.positionRelativeToAnchor, shouldFocus = _a.shouldFocus;
        if (!anchor) {
            return null;
        }
        var size = this.props.size ? this.props.size : "sm";
        var width = typeof size === "string" ? SIZE_WIDTH_MAP[size] : size;
        return (React.createElement(OutsideEventBehavior_1.default, { onClick: this.handlePageClick },
            React.createElement(Contents_1.default, { bgColor: bgColor, idealDirection: idealDirection, onKeyDown: this.handleKeyDown, onResize: this.handleResize, positionRelativeToAnchor: positionRelativeToAnchor, relativeOffset: this.state.relativeOffset, shouldFocus: shouldFocus, triggerRect: this.state.triggerBoundingRect, width: width }, children)));
    };
    return Controller;
}(React.Component));
exports.default = Controller;
//# sourceMappingURL=Controller.js.map