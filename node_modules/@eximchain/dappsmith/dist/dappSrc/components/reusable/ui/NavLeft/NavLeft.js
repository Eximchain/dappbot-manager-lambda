"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = __importStar(require("react"));
var Nav_1 = __importDefault(require("./Nav"));
var NavItem_1 = __importDefault(require("./NavItem"));
var Typography_1 = __importDefault(require("./Typography"));
var Input_1 = __importDefault(require("./Input"));
var AddressSwitcher_1 = __importDefault(require("./AddressSwitcher"));
var stringCompare = require('string-similarity');
var sortBy = require('lodash.sortby');
var keyBy = require('lodash.keyby');
function item(icon, text) {
    return (React.createElement("span", null,
        React.createElement("i", { className: "icon icon-" + icon }),
        " ",
        text,
        " "));
}
var NavLeft = /** @class */ (function (_super) {
    __extends(NavLeft, _super);
    function NavLeft(props) {
        var _this = _super.call(this, props) || this;
        _this.state = {
            addresses: [
                {
                    title: '0x123456789...',
                    label: 'Not Logged In'
                },
                {
                    title: 'abc98745613...',
                    label: 'Not Authenticated'
                },
            ],
            searchVal: ''
        };
        _this.getFilteredFxns = _this.getFilteredFxns.bind(_this);
        _this.updateSearch = _this.updateSearch.bind(_this);
        return _this;
    }
    NavLeft.prototype.updateSearch = function (evt) {
        this.setState({ searchVal: evt.currentTarget.value });
    };
    NavLeft.prototype.getFilteredFxns = function () {
        var _this = this;
        var items;
        if (this.state.searchVal === "") {
            items = sortBy(this.props.menuItems, function (item) { return item.title.toLowerCase(); });
        }
        else {
            var itemNames = this.props.menuItems.map(function (item) { return item.title; });
            // Creates an object where keys are fxn names and values are normalized match percentages. Check lib docs for more info.
            var similiarityRatings_1 = keyBy(stringCompare.findBestMatch(this.state.searchVal, itemNames).ratings, 'target');
            // Only show at least Golden Ratio similarity, sort by similarity
            items = sortBy(this.props.menuItems.filter(function (item) {
                return _this.state.searchVal.length < 4 || similiarityRatings_1[item.title].rating > 0.1;
            }), function (item) { return 1 - similiarityRatings_1[item.title].rating; });
        }
        return items;
    };
    NavLeft.prototype.render = function () {
        var selectedKey;
        this.props.menuItems.filter(function (item, index) {
            return item.selected && (selectedKey = index);
        });
        var searchBar = (React.createElement(Input_1.default, { type: 'text', value: this.state.searchVal, onChange: this.updateSearch, placeholder: 'Search' }));
        var items = this.getFilteredFxns();
        var navItems = items.map(function (menuItem, index) {
            return (React.createElement(NavItem_1.default, { key: index, disabled: menuItem.disabled, onClick: menuItem.onClick }, item(menuItem.icon, menuItem.title)));
        });
        return (React.createElement("div", { className: "left-sidebar" },
            React.createElement("div", { className: "left-sidebar-body" },
                React.createElement(Typography_1.default, { h6: true }, this.props.title),
                this.props.searchable ? searchBar : null,
                React.createElement(Nav_1.default, { selectedKey: selectedKey, onSelect: function (event, key) { return console.log(event, key); } }, navItems)),
            React.createElement("div", { className: "left-sidebar-footer" },
                React.createElement(AddressSwitcher_1.default, { title: 'Signing txs as', addresses: this.state.addresses, onSelect: function (index, data) { console.log(index, data); } }))));
    };
    NavLeft.defaultProps = {};
    return NavLeft;
}(React.Component));
exports.default = NavLeft;
//# sourceMappingURL=NavLeft.js.map