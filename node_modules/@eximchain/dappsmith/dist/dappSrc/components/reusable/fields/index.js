"use strict";
function __export(m) {
    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];
}
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
var AddressField_1 = __importDefault(require("./AddressField"));
exports.AddressField = AddressField_1.default;
var BooleanField_1 = __importDefault(require("./BooleanField"));
exports.BooleanField = BooleanField_1.default;
var ByteField_1 = __importStar(require("./ByteField"));
exports.ByteField = ByteField_1.default;
exports.ByteTypeStrings = ByteField_1.ByteTypeStrings;
var NumberField_1 = require("./NumberField");
var StringField_1 = __importDefault(require("./StringField"));
exports.StringField = StringField_1.default;
var Fields;
(function (Fields) {
    Fields[Fields["Address"] = 0] = "Address";
    Fields[Fields["Boolean"] = 1] = "Boolean";
    Fields[Fields["Bytes"] = 2] = "Bytes";
    Fields[Fields["Number"] = 3] = "Number";
    Fields[Fields["String"] = 4] = "String";
})(Fields = exports.Fields || (exports.Fields = {}));
__export(require("./NumberField"));
exports.selectFieldType = function (type) {
    if (Object.values(NumberField_1.NumberTypeStrings).includes(type)) {
        return Fields.Number;
    }
    else if (Object.values(ByteField_1.ByteTypeStrings).includes(type)) {
        return Fields.Bytes;
    }
    else {
        switch (type) {
            case ('bool'):
                return Fields.Boolean;
            case ('string'):
                return Fields.String;
            case ('address'):
                return Fields.Address;
            default:
                throw new Error("selectFieldType received a value it did not not how to handle: " + type);
        }
    }
};
//# sourceMappingURL=index.js.map