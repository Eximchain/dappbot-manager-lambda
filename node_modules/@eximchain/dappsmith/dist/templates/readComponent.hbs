import React, { FunctionComponent } from 'react';
import ReadTx from '../../reusable/ReadTx';
import { AllMethodState, MethodState, ParamValue } from '../../../state/reusable/types'; 
import { {{camelName}}Actions, {{camelName}}Selectors, {{camelName}}Types } from '../../../state/txDucks/{{camelName}}'
import { connect } from 'react-redux';

interface Props {
    data : string,
    methodState : MethodState,
    setter : (name:{{camelName}}Types.ParamNames,value:ParamValue)=>void,
}

export const {{pascalName}}:FunctionComponent<Props> = (props) => {
    return (
        <ReadTx fxn={ {{camelName}}Types.Method } 
            methodState={props.methodState}
            // @ts-ignore
            setter={props.setter}
            data={props.data} />
    )
}

const mapStateToProps = (state:AllMethodState) => {
    return {
        data : {{camelName}}Selectors.selectData(state),
        methodState : {{camelName}}Selectors.selectMethod(state)
    }
}

const mapDispatchToProps = {
    setter : {{camelName}}Actions.setParam
}

export default connect(mapStateToProps, mapDispatchToProps)({{pascalName}});