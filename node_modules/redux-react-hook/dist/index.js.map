{"version":3,"file":"index.js","sources":["../src/shallowEqual.ts","../src/create.ts","../src/index.ts"],"sourcesContent":["// Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\n\n// From https://github.com/reduxjs/react-redux/blob/3e53ff96ed10f71c21346f08823e503df724db35/src/utils/shallowEqual.js\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nfunction is(x: any, y: any) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    return x !== x && y !== y;\n  }\n}\n\nexport default function shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","// Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\n\nimport {createContext, useContext, useEffect, useRef, useState} from 'react';\nimport {Action, Dispatch, Store} from 'redux';\nimport shallowEqual from './shallowEqual';\n\nconst CONTEXT_ERROR_MESSAGE =\n  'redux-react-hook requires your Redux store to ' +\n  'be passed through context via the <StoreContext.Provider>';\n\n/**\n * To use redux-react-hook with stronger type safety, or to use with multiple\n * stores in the same app, create() your own instance and re-export the returned\n * functions.\n */\nexport function create<\n  TState,\n  TAction extends Action,\n  TStore extends Store<TState, TAction>\n>(): {\n  StoreContext: React.Context<TStore | null>;\n  useMappedState: <TResult>(mapState: (state: TState) => TResult) => TResult;\n  useDispatch: () => Dispatch<TAction>;\n} {\n  const StoreContext = createContext<TStore | null>(null);\n\n  /**\n   * Your passed in mapState function should be memoized with useCallback to avoid\n   * resubscribing every render. If you don't use other props in mapState, pass\n   * an empty array [] as the dependency list so the callback isn't recreated\n   * every render.\n   *\n   * const todo = useMappedState(useCallback(\n   *   state => state.todos.get(id),\n   *   [id],\n   * ));\n   */\n  function useMappedState<TResult>(\n    mapState: (state: TState) => TResult,\n  ): TResult {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error(CONTEXT_ERROR_MESSAGE);\n    }\n    const runMapState = () => mapState(store.getState());\n\n    const [derivedState, setDerivedState] = useState(runMapState);\n\n    const lastStore = useRef(store);\n    const lastMapState = useRef(mapState);\n    // Keep lastDerivedState in a ref and update it imperatively\n    // after calling setDerivedState so it's always up-to-date.\n    // We can't update it in useEffect because state might be updated\n    // synchronously multiple times before render occurs.\n    const lastDerivedState = useRef(derivedState);\n\n    const wrappedSetDerivedState = () => {\n      const newDerivedState = runMapState();\n      if (!shallowEqual(newDerivedState, lastDerivedState.current)) {\n        setDerivedState(newDerivedState);\n        lastDerivedState.current = newDerivedState;\n      }\n    };\n\n    // If the store or mapState change, rerun mapState\n    if (lastStore.current !== store || lastMapState.current !== mapState) {\n      lastStore.current = store;\n      lastMapState.current = mapState;\n      wrappedSetDerivedState();\n    }\n\n    useEffect(() => {\n      let didUnsubscribe = false;\n\n      // Run the mapState callback and if the result has changed, make the\n      // component re-render with the new state.\n      const checkForUpdates = () => {\n        if (didUnsubscribe) {\n          // Don't run stale listeners.\n          // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n          return;\n        }\n\n        wrappedSetDerivedState();\n      };\n\n      // Pull data from the store after first render in case the store has\n      // changed since we began.\n      checkForUpdates();\n\n      // Subscribe to the store to be notified of subsequent changes.\n      const unsubscribe = store.subscribe(checkForUpdates);\n\n      // The return value of useEffect will be called when unmounting, so\n      // we use it to unsubscribe from the store.\n      return () => {\n        didUnsubscribe = true;\n        unsubscribe();\n      };\n    }, [store, mapState]);\n\n    return derivedState;\n  }\n\n  function useDispatch(): Dispatch<TAction> {\n    const store = useContext(StoreContext);\n    if (!store) {\n      throw new Error(CONTEXT_ERROR_MESSAGE);\n    }\n    return store.dispatch;\n  }\n\n  return {\n    StoreContext,\n    useDispatch,\n    useMappedState,\n  };\n}\n","// Copyright (c) Facebook, Inc. and its affiliates. All Rights Reserved\n\nimport {create} from './create';\n\nexport const {StoreContext, useDispatch, useMappedState} = create<\n  any,\n  any,\n  any\n>();\n\nexport {create};\n"],"names":["createContext","useContext","useRef","useEffect"],"mappings":"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"}